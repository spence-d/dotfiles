#Rebinding Ctrl-b to Ctrl-t
unbind C-b
set-option -g prefix M-t
bind M-t send-prefix

#Enable italics
set -g default-terminal "tmux-256color"
#Enable true color support
set-option -ga terminal-overrides ",xterm-256color*:Tc"
#Enable undercurl
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'
#Enable underline colors
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'

##Vim keys
set-window-option -g mode-keys vi
set-window-option -g status-keys vi
set -g monitor-activity on
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'd' send -X copy-line
bind-key -T copy-mode-vi 'y' send -X copy-selection-and-cancel
#Vim-style pane-switching
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind H swap-pane -t '{left-of}'
bind J swap-pane -t '{down-of}'
bind K swap-pane -t '{up-of}'
bind L swap-pane -t '{right-of}'
bind P swap-window -t '{previous}'
bind N swap-window -t '{next}'

#Rebind q since l (last-pane) was just over-written
bind Tab last-window

bind Escape copy-mode
bind Enter paste-buffer

##Mouse configuration
set -g mouse on
#Middle click on the tab closes it
bind-key -n MouseUp2Status kill-window -t =
#Double click in the tab area to open a new one
bind-key -n DoubleClick1StatusDefault new-window

#Get rid of zero-indexing on window and pane numbers
#set -g base-index 1
#setw -g pane-base-index 1

##Linux clipboard fixes
set -g set-clipboard on
if-shell 'command -v xclip' {
  #Fix for set-clipboard mode appending to the clipboard instead of replacing it
  set-hook -g pane-set-clipboard 'run "tmux show-buffer | xclip -select clipboard"'
  #Fix for middle click paste getting disabled in Arch with mouse mode on
  bind-key -n MouseDown2Pane select-pane -t = \; run "xclip -out | tmux load-buffer - ; tmux paste-buffer"
  #Mouse select goes to selection buffer (this goes to the clipboard too, unfortunately)
  bind-key -T copy-mode-vi -n MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip"
}

##Status bar prettification
set -g status-bg colour16

#set -g status-left "#[bg=colour238]#[fg=colour247] %H:%M #[bg=colour16]#[fg=colour238]"
set -g status-left ""
set -g status-right ""

set -g status-justify centre

set -g window-status-current-format "#[fg=colour10]#[fg=colour16 bold]#[bg=colour10]#I #{?#{m:*[#!~MZ]*,#{window_flags}},#[fg=colour10]#[bg=white] #[fg=colour16],}\
#{?window_marked_flag, ,}#{?window_zoomed_flag, ,}#{?window_bell_flag, ,}#{?window_activity_flag,,}#{?window_silence_flag,⋯,}#{?#{m:*[#!~MZ]*,#{window_flags}},#[fg=white],#[fg=colour10]}#[bg=colour236] \
#[fg=colour10]#W#[fg=colour236]#[bg=colour16]"

set -g window-status-format "#{?window_last_flag,#[fg=colour120]#[bg=colour120],#[fg=cyan]#[bg=cyan]}#[fg=colour16]#I #{?#{m:*[#!~MZ]*,#{window_flags}},#{?window_last_flag,#[fg=colour120],#[fg=cyan]}#[bg=white] #[fg=colour16],}\
#{?window_marked_flag, ,}#{?window_zoomed_flag, ,}#{?window_bell_flag, ,}#{?window_activity_flag,,}#{?window_silence_flag,⋯,}#{?#{m:*[#!~MZ]*,#{window_flags}},#[fg=white],#{?window_last_flag,#[fg=colour120],#[fg=cyan]}}#[bg=colour236] \
#{?window_last_flag,#[fg=colour120],#[fg=cyan]}#W#[fg=colour236]#[bg=colour16]"

set -g window-status-bell-style "none"
set -g window-status-activity-style "none"


#Adds ^S and ^R to backup and restore sessions
if-shell "[ -f ~/dotfiles/tmux-resurrect/resurrect.tmux ]" {
  run-shell ~/dotfiles/tmux-resurrect/resurrect.tmux
}


# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
bind-key -n 'C-\' if-shell "$is_vim" 'send-keys C-\\'  'select-pane -l'

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l
